<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<connections xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main"><connection id="1" keepAlive="1" name="Query #1" description="Общий_рейтинговый_список_Query_1.sql" type="5" refreshedVersion="5" saveData="1"><dbPr connection="Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=mssql-edu.on.mgpu.ru;Extended Properties=&quot;Trusted_connection=yes&quot;;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Workstation ID=AW0216K01;Use Encryption for Data=False;Tag with column collation when possible=False" command="_x000d__x000a_  /*_x000d__x000a_   *_x000d__x000a_   * ConnectionString = Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=192.168.18.201\sql;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Use Encryption for Data=False;Tag with column collation when possible=False;User ID=sa;Password=ibzIq62bI1060S_x000d__x000a_   *_x000d__x000a_   */_x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Дата формирования отчета_x000d__x000a_   */_x000d__x000a_  declare @dt datetime; select @dt = dbo.create_date(2015,7,28);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Идентификатор Факультета / Института_x000d__x000a_   */_x000d__x000a_  declare @department_id int; select @department_id = 0;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учитывать только подтвержденные результаты _x000d__x000a_   * вступительных испытаний и списки на зачисление_x000d__x000a_   */_x000d__x000a_  declare @is_confirm_only bit; select @is_confirm_only = 00/*false*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учебный год_x000d__x000a_   */_x000d__x000a_  declare @academic_year_id integer; select @academic_year_id = coalesce([dbo].[get_academic_year_id](@dt, 01/*true*/), -1/*id*/);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_    Выборка факультетов, на которых остались места, и есть не _x000d__x000a_    поступившие абитуриенты, с сортировкой по наименованию_x000d__x000a_  */_x000d__x000a_  select [Department_Id] = t4.[Department_Id]_x000d__x000a_       , [Department_Title] = t4.[Department_Title]_x000d__x000a_  _x000d__x000a_  from (_x000d__x000a_  _x000d__x000a_  select _x000d__x000a_    _x000d__x000a_    /* Идентификатор факультета */_x000d__x000a_    [Department_Id] = t1.[Department_Id]_x000d__x000a_  , [Department_Title] = t1.[Department_Title]_x000d__x000a__x000d__x000a_  from (_x000d__x000a_      _x000d__x000a_      select_x000d__x000a_        _x000d__x000a_        /* Идентификаторы факультетов */_x000d__x000a_        [Department_Id] = /* Отрезаем первую запятую с пробелом */_x000d__x000a_        (stuff(_x000d__x000a_         (select_x000d__x000a_        _x000d__x000a_            N', ' + cast(s1.[Department_Id] as varchar(10))_x000d__x000a_        _x000d__x000a_          from_x000d__x000a_        _x000d__x000a_           [dbo].[EnterPlanDepartments] s1_x000d__x000a_           _x000d__x000a_          where (s1.[EnterPlan_Id] = t1.[Id])_x000d__x000a_          _x000d__x000a_          order by s1.[Department_Id]_x000d__x000a_          _x000d__x000a_          /*Конкатенация строк через XML*/_x000d__x000a_          for xml path(''), type).value('text()[1]', 'nvarchar(max)'), 1, 2, N'')  _x000d__x000a_        )_x000d__x000a__x000d__x000a_        /* Наименования факультетов */_x000d__x000a_      , [Department_Title] = /* Отрезаем первую запятую с пробелом */_x000d__x000a_        (stuff(_x000d__x000a_         (select_x000d__x000a_        _x000d__x000a_            N', ' + s2.[Title]_x000d__x000a_        _x000d__x000a_          from_x000d__x000a_        _x000d__x000a_           [dbo].[EnterPlanDepartments] s1 join [dbo].[Departments] s2 on [s1].[Department_Id] = [s2].[Id]_x000d__x000a_           _x000d__x000a_          where (s1.[EnterPlan_Id] = t1.[Id])_x000d__x000a_          _x000d__x000a_          order by s2.[Title]_x000d__x000a_          _x000d__x000a_          /*Конкатенация строк через XML*/_x000d__x000a_          for xml path(''), type).value('text()[1]', 'nvarchar(max)'), 1, 2, N'')  _x000d__x000a_        )_x000d__x000a_    _x000d__x000a_      from _x000d__x000a_      _x000d__x000a_        [dbo].[EnterPlans] t1_x000d__x000a_          _x000d__x000a_        join [dbo].[select_enter_plans](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_          on(_x000d__x000a_            (t2.[id] = t1.[Id])_x000d__x000a_          )_x000d__x000a_          _x000d__x000a_        join [dbo].[SpecialityQualifications] ts_x000d__x000a_          on(_x000d__x000a_            (t1.[SpecialityQualification_Id] = ts.[Id])_x000d__x000a_           )_x000d__x000a_           _x000d__x000a_        join [dbo].[Qualifications] tq _x000d__x000a_          on(_x000d__x000a_            (ts.[Qualification_Id] = tq.[Id])_x000d__x000a_           )_x000d__x000a__x000d__x000a_        /*_x000d__x000a_          Есть не поступившие абитуриенты_x000d__x000a_        */_x000d__x000a_        join (_x000d__x000a_          _x000d__x000a_          select_x000d__x000a_          _x000d__x000a_            [id] = t1.[EnterPlan_Id]_x000d__x000a_            _x000d__x000a_          from_x000d__x000a_          _x000d__x000a_            [dbo].[StudentPetitions] t1_x000d__x000a_            _x000d__x000a_            join [dbo].[select_student_petitions_ext](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_              on(_x000d__x000a_                (t2.[id] = t1.[Id])_x000d__x000a_              )_x000d__x000a_              _x000d__x000a_          where(_x000d__x000a_            _x000d__x000a_            /* Отметка о зачислении */_x000d__x000a_            (00/*false*/ = t2.[is_enter]) and_x000d__x000a_            _x000d__x000a_            /* Выбыл из конкурса */_x000d__x000a_            (00/*false*/ = t2.[is_drop_out]) and_x000d__x000a_            _x000d__x000a_            /* Дата возврата заявления (если не указано, то попадает в выборку) */_x000d__x000a_            ([dbo].[start_date](@dt) &lt; [dbo].[due_date](coalesce(t1.[DateOfReturn], @dt)))_x000d__x000a_          )_x000d__x000a_          _x000d__x000a_          group by _x000d__x000a_          _x000d__x000a_            t1.[EnterPlan_Id]_x000d__x000a_        _x000d__x000a_        ) t3 on(_x000d__x000a_          _x000d__x000a_          (t3.[id] = t1.[Id])_x000d__x000a_        )_x000d__x000a_        _x000d__x000a_        left join (_x000d__x000a_          _x000d__x000a_          /* Выборка факультета плана приема для использования в фильтре по факультету */_x000d__x000a_          select _x000d__x000a_          _x000d__x000a_            s1.[EnterPlan_Id]_x000d__x000a_            _x000d__x000a_            , [Department_Id] = max(s1.[Department_Id]) _x000d__x000a_            _x000d__x000a_          from _x000d__x000a_          _x000d__x000a_            [dbo].[EnterPlanDepartments] s1_x000d__x000a_            _x000d__x000a_          where (_x000d__x000a_            (s1.[Department_Id] = @department_id)_x000d__x000a_          )_x000d__x000a_            _x000d__x000a_          group by s1.[EnterPlan_Id]_x000d__x000a_          _x000d__x000a_        ) t4 on(_x000d__x000a_              t1.[Id] = t4.[EnterPlan_Id]_x000d__x000a_            )_x000d__x000a_        _x000d__x000a_      where(_x000d__x000a_        _x000d__x000a_        /* Количество оставшихся мест */_x000d__x000a_        (t2.[plan_left] &gt; 0) and_x000d__x000a_        _x000d__x000a_        /* СПО, ВПО, ДПО */_x000d__x000a_        (tq.[IsSpo] = 1 or tq.[IsVpo] = 1 or tq.[IsCourses] = 1) and_x000d__x000a_        _x000d__x000a_        /* Все подтверждены _x000d__x000a_        (t2.[exams_count] = t2.[confirm_exams_count]) and */_x000d__x000a_        _x000d__x000a_        /* Если установлен фильтр по Факультету / институту, то используем его */_x000d__x000a_        (t4.[Department_Id] = @department_id or @department_id = 0)_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    ) t1_x000d__x000a_    group by t1.[Department_Id]_x000d__x000a_           , t1.[Department_Title]_x000d__x000a_    ) t4_x000d__x000a_    _x000d__x000a_  order by_x000d__x000a_    _x000d__x000a_    /*_x000d__x000a_      Сортировка по наименованию_x000d__x000a_    */_x000d__x000a_    t4.[Department_Title]_x000d__x000a_    _x000d__x000a_  ;_x000d__x000a_"/></connection><connection id="2" keepAlive="1" name="Query #2" description="Общий_рейтинговый_список_Query_2.sql" type="5" refreshedVersion="5" saveData="1"><dbPr connection="Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=mssql-edu.on.mgpu.ru;Extended Properties=&quot;Trusted_connection=yes&quot;;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Workstation ID=AW0216K01;Use Encryption for Data=False;Tag with column collation when possible=False" command="_x000d__x000a_  /*_x000d__x000a_   *_x000d__x000a_   * ConnectionString = Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=192.168.18.201\sql;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Use Encryption for Data=False;Tag with column collation when possible=False;User ID=sa;Password=ibzIq62bI1060S_x000d__x000a_   *_x000d__x000a_   */_x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Дата формирования отчета_x000d__x000a_   */_x000d__x000a_  declare @dt datetime; select @dt = dbo.create_date(2015,7,28);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Идентификатор Факультета / Института_x000d__x000a_   */_x000d__x000a_  declare @department_id int; select @department_id = 0;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учитывать только подтвержденные результаты _x000d__x000a_   * вступительных испытаний и списки на зачисление_x000d__x000a_   */_x000d__x000a_  declare @is_confirm_only bit; select @is_confirm_only = 00/*false*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учебный год_x000d__x000a_   */_x000d__x000a_  declare @academic_year_id integer; select @academic_year_id = coalesce([dbo].[get_academic_year_id](@dt, 01/*true*/), -1/*id*/);_x000d__x000a__x000d__x000a_  /*_x000d__x000a_    Выборка строк плана приема на которые есть не поступившие _x000d__x000a_    абитуриенты и имеются места, с данными о вступительных испытаниях_x000d__x000a_  */_x000d__x000a_  select_x000d__x000a_  _x000d__x000a_    /* Идентификаторы факультетов */_x000d__x000a_    [Department_Id] = (stuff(_x000d__x000a_         (select_x000d__x000a_        _x000d__x000a_            N', ' + cast(s1.[Department_Id] as varchar(10))_x000d__x000a_        _x000d__x000a_          from_x000d__x000a_        _x000d__x000a_           [dbo].[EnterPlanDepartments] s1_x000d__x000a_           _x000d__x000a_          where (s1.[EnterPlan_Id] = t1.[Id])_x000d__x000a_          _x000d__x000a__x0009__x0009_  order by s1.[Department_Id]_x000d__x000a_          _x000d__x000a__x0009__x0009_  /*Конкатенация строк через XML*/_x000d__x000a_          for xml path(''), type).value('text()[1]', 'nvarchar(max)'), 1, 2, N'')  _x000d__x000a_        )_x000d__x000a_    _x000d__x000a_    /* Идентификатор плана приема */_x000d__x000a_    , [EnterPlan_Id] = t1.[Id]_x000d__x000a_    _x000d__x000a_    /* Название плана приема */_x000d__x000a_    , [EnterPlan_Title] = t1.[Title]_x000d__x000a_    _x000d__x000a_    /* Цифра плана */_x000d__x000a_    , [EnterPlan_Plan] = t1.[Plan]_x000d__x000a_    _x000d__x000a_    /* Детализация плана */_x000d__x000a_    , [EnterPlan_Details] = t4.[Title] _x000d__x000a_      + N', 1 курс, ' _x000d__x000a_      + t5.[Title] _x000d__x000a_      + (case when t1.[IsSpecialRightQuota] = 01/*true*/ then N' (Квота приема лиц, имеющих особое право)' else N'' end)_x000d__x000a_      + (case when not t10.[Code] = N'01'/*Стандартная*/ then N', ' + t10.[Title] else N'' end)      _x000d__x000a_      + (case when not t9.[Code] = N'01'/*Нормативный*/ then N', Тип срока обучения: ' + t9.[Title] else N'' end)_x000d__x000a_      + (case when t1.[IsWeekendEducation] = 01/*true*/ then N', Группа выходного дня' else N'' end)_x000d__x000a_      + (case when t1.[IsDistanceEducation] = 01/*true*/ then N', Дистанционное обучение' else N'' end)_x000d__x000a_      + N', ' + (case _x000d__x000a_                  when t8.[Code] = N'03'/*Бакалавриат*/ and t7.[IsPracticeOriented] = 1 then N'Прикладной бакалавриат'_x000d__x000a_                  when t8.[Code] = N'03'/*Бакалавриат*/ and t7.[IsPracticeOriented] = 0 then N'Академический бакалавриат'_x000d__x000a_                 else t8.[Title] end)_x000d__x000a_    _x000d__x000a_    /* Количество уже зачисленных */_x000d__x000a_    , [EnterPlan_PlanEnrolled] = t1.[Plan] - t2.[plan_left]_x000d__x000a_    _x000d__x000a_    /* Количество вступительных испытаний */_x000d__x000a_    , [Exams_Count] = t2.[exams_count]_x000d__x000a_    _x000d__x000a_    /* Вступительное испытание № 1 */_x000d__x000a_    , [Exam_1_Title] = t2.[exam_1_title]/* + N'(' + cast(cast(t2.[exam_1_min_rating] as integer) as nvarchar(max)) + N')' */_x000d__x000a_    _x000d__x000a_    /* Вступительное испытание № 2 */_x000d__x000a_    , [Exam_2_Title] = t2.[exam_2_title]/* + N'(' + cast(cast(t2.[exam_2_min_rating] as integer) as nvarchar(max)) + N')')*/_x000d__x000a_    _x000d__x000a_    /* Вступительное испытание № 3 */_x000d__x000a_    , [Exam_3_Title] = t2.[exam_3_title]/* + N'(' + cast(cast(t2.[exam_3_min_rating] as integer) as nvarchar(max)) + N')'*/_x000d__x000a_    _x000d__x000a_    /* Вступительное испытание № 4 */_x000d__x000a_    , [Exam_4_Title] = t2.[exam_4_title]/* + N'(' + cast(cast(t2.[exam_4_min_rating] as integer) as nvarchar(max)) + N')'*/    _x000d__x000a_    _x000d__x000a_  from _x000d__x000a_  _x000d__x000a_    [dbo].[EnterPlans] t1_x000d__x000a_      _x000d__x000a_    join [dbo].[select_enter_plans](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_      on(_x000d__x000a_        (t2.[id] = t1.[Id])_x000d__x000a_      )_x000d__x000a__x000d__x000a_    /*_x000d__x000a_      Есть не поступившие абитуриенты_x000d__x000a_    */_x000d__x000a_    join (_x000d__x000a_      _x000d__x000a_      select_x000d__x000a_      _x000d__x000a_        [id] = t1.[EnterPlan_Id]_x000d__x000a_        _x000d__x000a_      from_x000d__x000a_      _x000d__x000a_        [dbo].[StudentPetitions] t1_x000d__x000a_        _x000d__x000a_        join [dbo].[select_student_petitions_ext](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_          on(_x000d__x000a_            (t2.[id] = t1.[Id])_x000d__x000a_          )_x000d__x000a_          _x000d__x000a_      where(_x000d__x000a_        _x000d__x000a_        /* Отметка о зачислении */_x000d__x000a_        (00/*false*/ = t2.[is_enter]) and_x000d__x000a_        _x000d__x000a_        /* Выбыл из конкурса */_x000d__x000a_        (00/*false*/ = t2.[is_drop_out]) and_x000d__x000a_        _x000d__x000a_        /* Дата возврата заявления (если не указано, то попадает в выборку) */_x000d__x000a_        ([dbo].[start_date](@dt) &lt; [dbo].[due_date](coalesce(t1.[DateOfReturn], @dt)))_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_      group by _x000d__x000a_      _x000d__x000a_        t1.[EnterPlan_Id]_x000d__x000a_    _x000d__x000a_    ) t3 on(_x000d__x000a_      _x000d__x000a_      (t3.[id] = t1.[Id])_x000d__x000a_    )_x000d__x000a_    _x000d__x000a_    join [dbo].[StudyModes] t4_x000d__x000a_      on(_x000d__x000a_        (t4.[Id] = t1.[StudyMode_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[PaymentTypes] t5_x000d__x000a_      on(_x000d__x000a_        (t5.[Id] = t1.[PaymentType_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[SpecialityQualifications] t7    _x000d__x000a_      on(_x000d__x000a_        (t7.[Id] = t1.[SpecialityQualification_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[Qualifications] t8_x000d__x000a_      on(_x000d__x000a_        (t8.[Id] = t7.[Qualification_Id])_x000d__x000a_      )            _x000d__x000a_      _x000d__x000a_    left join (_x000d__x000a_      _x000d__x000a_      /* Выборка факультета плана приема для использования в фильтре по факультету */_x000d__x000a_      select _x000d__x000a_      _x000d__x000a_        s1.[EnterPlan_Id]_x000d__x000a_        _x000d__x000a_        , [Department_Id] = max(s1.[Department_Id]) _x000d__x000a_        _x000d__x000a_      from _x000d__x000a_      _x000d__x000a_        [dbo].[EnterPlanDepartments] s1_x000d__x000a_        _x000d__x000a_      where (_x000d__x000a_        (s1.[Department_Id] = @department_id)_x000d__x000a_      )_x000d__x000a_        _x000d__x000a_      group by s1.[EnterPlan_Id]_x000d__x000a_      _x000d__x000a_    ) t6 on(_x000d__x000a_          t1.[Id] = t6.[EnterPlan_Id]_x000d__x000a_        )_x000d__x000a_        _x000d__x000a_    join [dbo].[PeriodTypes] t9_x000d__x000a_      on(_x000d__x000a_        (t9.[Id] = t1.[PeriodType_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[SyllabusTypes] t10_x000d__x000a_      on(_x000d__x000a_        (t10.[Id] = t1.[SyllabusType_Id])_x000d__x000a_      )      _x000d__x000a_    _x000d__x000a_  where(_x000d__x000a_    _x000d__x000a_    /* Количество оставшихся мест */_x000d__x000a_    (t2.[plan_left] &gt; 0) and_x000d__x000a_    _x000d__x000a_    /* СПО, ВПО, ДПО */_x000d__x000a_    (t8.[IsSpo] = 1 or t8.[IsVpo] = 1 or t8.[IsCourses] = 1) and_x000d__x000a_    _x000d__x000a_    /* Все подтверждены _x000d__x000a_    (t2.[exams_count] = t2.[confirm_exams_count]) and */_x000d__x000a_    _x000d__x000a_    /* Если установлен фильтр по Факультету / институту, то используем его */_x000d__x000a_    (t6.[Department_Id] = @department_id or @department_id = 0)_x000d__x000a_  )_x000d__x000a_  _x000d__x000a_  order by   _x000d__x000a_  _x000d__x000a_    [Department_Id]_x000d__x000a_  _x000d__x000a_    , (case _x000d__x000a_         when t8.[Code] = N'03'/*Бакалавриат*/  then 3_x000d__x000a_         when t8.[Code] = N'05'/*Специалитет*/  then 2_x000d__x000a_         when t8.[Code] = N'04'/*Магистратура*/ then 1_x000d__x000a_         else 0_x000d__x000a_       end) desc_x000d__x000a_    _x000d__x000a_    , (case _x000d__x000a_         when t4.[Code] = N'01'/*Очная*/  then 3_x000d__x000a_         when t4.[Code] = N'03'/*Очно-заочная*/  then 2_x000d__x000a_         when t4.[Code] = N'05'/*Заочная*/ then 1_x000d__x000a_         else 0_x000d__x000a_       end) desc_x000d__x000a_       _x000d__x000a_    , t7.[Id]/* Направление подготовки */_x000d__x000a_    _x000d__x000a_    , (case _x000d__x000a_         when t5.[Code] = N'02'/*Целевой прием*/  then 4_x000d__x000a_         when t5.[Code] = N'01'/*Бюджетные места*/ and t1.[IsSpecialRightQuota] = 01/*true*/  then 3                  _x000d__x000a_         when t5.[Code] = N'01'/*Бюджетные места*/ and t1.[IsSpecialRightQuota] = 00/*false*/  then 2_x000d__x000a_         when t5.[Code] = N'03'/*С оплатой обучения*/ then 1_x000d__x000a_         else 0_x000d__x000a_       end) desc_x000d__x000a_  _x000d__x000a_  ;_x000d__x000a__x000d__x000a_"/></connection><connection id="3" keepAlive="1" name="Query #4" description="Общий_рейтинговый_список_Query_4.sql" type="5" refreshedVersion="5" savePassword="1" saveData="1"><dbPr connection="Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=mssql-edu.on.mgpu.ru;Extended Properties=&quot;Trusted_connection=yes&quot;;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Workstation ID=AW0216K01;Use Encryption for Data=False;Tag with column collation when possible=False" command="_x000d__x000a_  /*_x000d__x000a_   *_x000d__x000a_   * ConnectionString = Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=192.168.18.201\sql;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Use Encryption for Data=False;Tag with column collation when possible=False;User ID=sa;Password=ibzIq62bI1060S_x000d__x000a_   *_x000d__x000a_   */_x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Дата формирования отчета_x000d__x000a_   */_x000d__x000a_  declare @dt datetime; select @dt = dbo.create_date(2015,7,28);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учитывать только подтвержденные результаты _x000d__x000a_   * вступительных испытаний и списки на зачисление_x000d__x000a_   */_x000d__x000a_  declare @is_confirm_only bit; select @is_confirm_only = 00/*false*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Идентификатор Факультета / Института_x000d__x000a_   */_x000d__x000a_  declare @department_id int; select @department_id = 0;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учебный год_x000d__x000a_   */_x000d__x000a_  declare @academic_year_id integer; select @academic_year_id = coalesce([dbo].[get_academic_year_id](@dt, 01/*true*/), -1/*id*/);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Без вступительных испытаний_x000d__x000a_   */_x000d__x000a_  declare @is_without_exams bit; select @is_without_exams = 00/*false*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Успешное прохождение всех вступительных испытаний_x000d__x000a_   */_x000d__x000a_  declare @is_over_min_rating bit; select @is_over_min_rating = 01/*true*/;_x000d__x000a__x000d__x000a_  /*_x000d__x000a_    Выборка заявлений абитуриентов с информацией об оценках (фильтрация _x000d__x000a_    по отметке о зачислении, вне конкурса и успешное прохождение всех _x000d__x000a_    вступительных испытаний) с сортировкой согласно положению_x000d__x000a_  */_x000d__x000a_  select_x000d__x000a_  _x000d__x000a_    /* Идентификатор плана приема */_x000d__x000a_    [EnterPlan_Id] = t1.[EnterPlan_Id]_x000d__x000a_    _x000d__x000a_    /* Наименование заявления абитуриента */_x000d__x000a_    , [StudentPetition_Title] = t1.[Title]_x000d__x000a_    _x000d__x000a_    /* Наименование абитуриента */_x000d__x000a_    , [Student_Title] = t3.[Title]_x000d__x000a_    _x000d__x000a_    /* Сумма баллов */_x000d__x000a_    , [Student_TotalRating] = _x000d__x000a_            case when tq.IsSpo = 01/*true*/_x000d__x000a_              then                _x000d__x000a_                case_x000d__x000a_                  when charindex(',', [dbo].[format_float](coalesce(t2.[total_rating], 0), 4)) &gt; 0 _x000d__x000a_                  then                _x000d__x000a_                    /* padding right with zero */_x000d__x000a_                    coalesce(_x000d__x000a_                      [dbo].[format_float](coalesce(t2.[total_rating], 0), 4)_x000d__x000a_                        + replicate(N'0', 4 - (len([dbo].[format_float](coalesce(t2.[total_rating], 0), 4)) - charindex(',', [dbo].[format_float](coalesce(t2.[total_rating], 0), 4))))_x000d__x000a_                    , N'')_x000d__x000a_                  _x000d__x000a_                  else [dbo].[format_float](coalesce(t2.[total_rating], 0), 4) + N',' + N'0000'                  _x000d__x000a_                end            _x000d__x000a_              else           _x000d__x000a_                dbo.format_float(t2.[total_rating], 0)            _x000d__x000a_            end    _x000d__x000a_    _x000d__x000a_    /* Баллы за индивидуальные достижения */_x000d__x000a_    , [Achievements_Rating] = t2.[achievements_rating]_x000d__x000a__x000d__x000a_    /* Количество сдаваемых экзаменов */_x000d__x000a_    , [ExamResults_Count]   = t2.[exam_results_count]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 1 */_x000d__x000a_    , [ExamResult_1_Rating] = t2.[exam_result_1_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 2 */_x000d__x000a_    , [ExamResult_2_Rating] = t2.[exam_result_2_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 3 */_x000d__x000a_    , [ExamResult_3_Rating] = t2.[exam_result_3_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 4 */_x000d__x000a_    , [ExamResult_4_Rating] = t2.[exam_result_4_rating]_x000d__x000a_    _x000d__x000a_    /* Отметка об оригинале */_x000d__x000a_    , [StudentPetition_HasOriginals] = (case when t1.[HasOriginals] = 01/*true*/ then N'да' else N'' end)_x000d__x000a_    _x000d__x000a_    /* Преимущественное право */_x000d__x000a_    , [CompetitionType_IsAdvantageRight] = (case when t4.[IsAdvantageRight] = 01/*true*/ then N'да' else N'' end)_x000d__x000a_    _x000d__x000a_    /* Льготы */_x000d__x000a_    , [BenefitDocuments] = (_x000d__x000a_        _x000d__x000a_        /* Отрезаем первую запятую с пробелом */_x000d__x000a_        stuff(_x000d__x000a_         (select N', ' + s1.[Title]_x000d__x000a_          from [dbo].[BenefitDocumentsView] s1_x000d__x000a_          where (s1.[Student_Id] = t1.[Student_Id])_x000d__x000a__x000d__x000a_          /*Конкатенация строк через XML*/_x000d__x000a_          for xml path(''), type).value('text()[1]', 'nvarchar(max)'), 1, 2, N'')_x000d__x000a_    )_x000d__x000a_    _x000d__x000a_    /* Контактный телефон */_x000d__x000a_    , [Телефон] = t10.[Phone]_x000d__x000a_    _x000d__x000a_    /* md5(PassportSeries + PassportNumber) */_x000d__x000a_    , [PKUID] = convert(varchar(32), HashBytes('MD5', convert(varchar, (coalesce(t10.[PassportSeries], N'') + t10.[PassportNumber]))), 2)_x000d__x000a_    _x000d__x000a_  from _x000d__x000a_    _x000d__x000a_    [dbo].[StudentPetitions] t1_x000d__x000a_    _x000d__x000a_    /*_x000d__x000a_      Выборка заявлений абитуриентов (с фильтром по дате подачи заявления)_x000d__x000a_      с информацией о зачислении и результатах вступительных испытаний_x000d__x000a_    */_x000d__x000a_    join [dbo].[select_student_petitions_ext](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_      on(_x000d__x000a_        (t2.[id] = t1.[Id])_x000d__x000a_      )_x000d__x000a__x000d__x000a_    join [dbo].[Students] t3_x000d__x000a_      on(_x000d__x000a_        (t3.[Id] = t1.[Student_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[CompetitionTypes] t4_x000d__x000a_      on(_x000d__x000a_        (t4.[Id] = t1.[CompetitionType_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[EnterPlans] t5_x000d__x000a_      on(_x000d__x000a_        (t5.[Id] = t1.[EnterPlan_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[SpecialityQualifications] ts_x000d__x000a_      on(_x000d__x000a_        (t5.[SpecialityQualification_Id] = ts.[Id])_x000d__x000a_       )_x000d__x000a_       _x000d__x000a_    join [dbo].[Qualifications] tq _x000d__x000a_      on(_x000d__x000a_        (ts.[Qualification_Id] = tq.[Id])_x000d__x000a_       )_x000d__x000a_      _x000d__x000a_    left join (_x000d__x000a_      _x000d__x000a_      /* Выборка факультета плана приема для использования в фильтре по факультету */_x000d__x000a_      select       _x000d__x000a_        s1.[EnterPlan_Id]        _x000d__x000a_        , [Department_Id] = max(s1.[Department_Id])_x000d__x000a_      _x000d__x000a_      from [dbo].[EnterPlanDepartments] s1        _x000d__x000a_      where (s1.[Department_Id] = @department_id)_x000d__x000a_      group by s1.[EnterPlan_Id]_x000d__x000a_      _x000d__x000a_    ) t6 on(_x000d__x000a_          t5.[Id] = t6.[EnterPlan_Id]_x000d__x000a_        )_x000d__x000a_        _x000d__x000a_    left join [dbo].[BenefitDocumentsView] t7_x000d__x000a_      on(_x000d__x000a_        (t7.[Id] = t1.[BenefitDocument_Id])_x000d__x000a_      )_x000d__x000a_    _x000d__x000a_    left join [dbo].[BenefitDocumentTypes] t8_x000d__x000a_      on(_x000d__x000a_        (t8.[Id] = t7.[BenefitDocumentType_Id])_x000d__x000a_      )        _x000d__x000a_        _x000d__x000a_    left join (_x000d__x000a_      _x000d__x000a_      /* выборка для определения наличия приказов на зачисление */_x000d__x000a_      select [EnterPlan_Id] from [dbo].[EnterOrders] where [IsConfirm] = 01/*true*/ group by [EnterPlan_Id]_x000d__x000a_      _x000d__x000a_    ) t9_x000d__x000a_      on(_x000d__x000a_        (t9.[EnterPlan_Id] = t5.[Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[EnrolleeProfilesView] t10_x000d__x000a_      on(_x000d__x000a_        (t10.[Student_Id] = t3.[Id])_x000d__x000a_      )_x000d__x000a_       _x000d__x000a_  where(_x000d__x000a_  _x000d__x000a_    /* СПО, ВПО, ДПО */_x000d__x000a_    (tq.[IsSpo] = 1 or tq.[IsVpo] = 1 or tq.[IsCourses] = 1) and_x000d__x000a__x000d__x000a_    /* Отметка о зачислении */_x000d__x000a_    (00/*false*/ = t2.[is_enter]) and_x000d__x000a_    _x000d__x000a_    /* Выбыл из конкурса */_x000d__x000a_    (00/*false*/ = t2.[is_drop_out]) and_x000d__x000a_    _x000d__x000a_    /* Дата возврата заявления (если не указано, то попадает в выборку) */_x000d__x000a_    ([dbo].[start_date](@dt) &lt; [dbo].[due_date](coalesce(t1.[DateOfReturn], @dt))) and_x000d__x000a_    _x000d__x000a_    /* Без ВИ */_x000d__x000a_    (@is_without_exams = t4.[IsWithoutExam]) and_x000d__x000a_    _x000d__x000a_    /* Успешное прохождение всех вступительных испытаний */_x000d__x000a_    (@is_over_min_rating = t2.[is_over_min_rating]) and_x000d__x000a_    _x000d__x000a_    /* Если установлен фильтр по Факультету / институту, то используем его */_x000d__x000a_    (@department_id = 0 or t6.[Department_Id] = @department_id)_x000d__x000a_    _x000d__x000a_  )_x000d__x000a_  _x000d__x000a_  order by_x000d__x000a_  _x000d__x000a_    /* Идентификатор плана приема */_x000d__x000a_    t1.[EnterPlan_Id]_x000d__x000a_    _x000d__x000a_    /* Ранжирование абитуриентов с льготой &quot;Без вступительных испытаний&quot; _x000d__x000a_       (TODO: учитывать льготу &quot;Преимущественное право&quot; при равных баллах) _x000d__x000a_     */_x000d__x000a_    , (case _x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'11'/*Члены сборных команд*/ then 1_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'04'/*Диплом ВОШ*/ and t7.[IsWinner] = 01/*победитель*/ then 2_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'04'/*Диплом ВОШ*/ and t7.[IsWinner] = 00/*призер*/ then 3_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'12'/*Чемпионы и призеры в спорте*/ then 4_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'06'/*Диплом ОШ*/ and t7.[IsWinner] = 01/*победитель*/ then 5_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'06'/*Диплом ОШ*/ and t7.[IsWinner] = 00/*призер*/ then 6_x000d__x000a_         else 99999/*низший приоритет*/_x000d__x000a_       end)_x000d__x000a_    _x000d__x000a_    /* Сумма балов в порядке убывания */_x000d__x000a_    , t2.[total_rating] desc_x000d__x000a_    _x000d__x000a_    /* Балл по профильному экзамену */_x000d__x000a_    , t2.[specific_exam_result_rating] desc_x000d__x000a__x000d__x000a_    /* Баллы за индивидуальные достижения */_x000d__x000a_    , t2.[achievements_rating] desc_x000d__x000a__x000d__x000a_    /* Преимущественное право при зачислении в порядке убывания */_x000d__x000a_    , (case when t4.[IsAdvantageRight] = 01/*true*/ or t4.[IsOutOfCompetition] = 01/*true*/ then 1 else 0 end) desc_x000d__x000a_    _x000d__x000a_    /* Наименование заявления абитуриента */_x000d__x000a_    , t1.[Title]_x000d__x000a_  ;_x000d__x000a_"/></connection><connection id="4" keepAlive="1" name="Query #7" description="Общий_рейтинговый_список_Query_7.sql" type="5" refreshedVersion="5" savePassword="1" saveData="1"><dbPr connection="Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=mssql-edu.on.mgpu.ru;Extended Properties=&quot;Trusted_connection=yes&quot;;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Workstation ID=AW0216K01;Use Encryption for Data=False;Tag with column collation when possible=False" command="_x000d__x000a_  /*_x000d__x000a_   *_x000d__x000a_   * ConnectionString = Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=192.168.18.201\sql;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Use Encryption for Data=False;Tag with column collation when possible=False;User ID=sa;Password=ibzIq62bI1060S_x000d__x000a_   *_x000d__x000a_   */_x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Дата формирования отчета_x000d__x000a_   */_x000d__x000a_  declare @dt datetime; select @dt = dbo.create_date(2015,7,28);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учитывать только подтвержденные результаты _x000d__x000a_   * вступительных испытаний и списки на зачисление_x000d__x000a_   */_x000d__x000a_  declare @is_confirm_only bit; select @is_confirm_only = 00/*false*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Идентификатор Факультета / Института_x000d__x000a_   */_x000d__x000a_  declare @department_id int; select @department_id = 0;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учебный год_x000d__x000a_   */_x000d__x000a_  declare @academic_year_id integer; select @academic_year_id = coalesce([dbo].[get_academic_year_id](@dt, 01/*true*/), -1/*id*/);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Без вступительных испытаний_x000d__x000a_   */_x000d__x000a_  declare @is_without_exams bit; select @is_without_exams = 01/*true*/;_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Успешное прохождение всех вступительных испытаний_x000d__x000a_   */_x000d__x000a_  declare @is_over_min_rating bit; select @is_over_min_rating = 00/*false*/;_x000d__x000a__x000d__x000a_  /*_x000d__x000a_    Выборка заявлений абитуриентов с информацией об оценках (фильтрация _x000d__x000a_    по отметке о зачислении, вне конкурса и успешное прохождение всех _x000d__x000a_    вступительных испытаний) с сортировкой согласно положению_x000d__x000a_  */_x000d__x000a_  select_x000d__x000a_  _x000d__x000a_    /* Идентификатор плана приема */_x000d__x000a_    [EnterPlan_Id] = t1.[EnterPlan_Id]_x000d__x000a_    _x000d__x000a_    /* Наименование заявления абитуриента */_x000d__x000a_    , [StudentPetition_Title] = t1.[Title]_x000d__x000a_    _x000d__x000a_    /* Наименование абитуриента */_x000d__x000a_    , [Student_Title] = t3.[Title]_x000d__x000a_    _x000d__x000a_    /* Сумма баллов */_x000d__x000a_    , [Student_TotalRating] = _x000d__x000a_            case when tq.IsSpo = 01/*true*/_x000d__x000a_              then                _x000d__x000a_                case_x000d__x000a_                  when charindex(',', [dbo].[format_float](coalesce(t2.[total_rating], 0), 4)) &gt; 0 _x000d__x000a_                  then                _x000d__x000a_                    /* padding right with zero */_x000d__x000a_                    coalesce(_x000d__x000a_                      [dbo].[format_float](coalesce(t2.[total_rating], 0), 4)_x000d__x000a_                        + replicate(N'0', 4 - (len([dbo].[format_float](coalesce(t2.[total_rating], 0), 4)) - charindex(',', [dbo].[format_float](coalesce(t2.[total_rating], 0), 4))))_x000d__x000a_                    , N'')_x000d__x000a_                  _x000d__x000a_                  else [dbo].[format_float](coalesce(t2.[total_rating], 0), 4) + N',' + N'0000'                  _x000d__x000a_                end            _x000d__x000a_              else           _x000d__x000a_                dbo.format_float(t2.[total_rating], 0)            _x000d__x000a_            end_x000d__x000a_    _x000d__x000a_    /* Баллы за индивидуальные достижения */_x000d__x000a_    , [Achievements_Rating] = t2.[achievements_rating]_x000d__x000a_    _x000d__x000a_    /* Количество сдаваемых экзаменов */_x000d__x000a_    , [ExamResults_Count] = t2.[exam_results_count]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 1 */_x000d__x000a_    , [ExamResult_1_Rating] = t2.[exam_result_1_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 2 */_x000d__x000a_    , [ExamResult_2_Rating] = t2.[exam_result_2_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 3 */_x000d__x000a_    , [ExamResult_3_Rating] = t2.[exam_result_3_rating]_x000d__x000a_    _x000d__x000a_    /* Балл оценки № 4 */_x000d__x000a_    , [ExamResult_4_Rating] = t2.[exam_result_4_rating]_x000d__x000a_    _x000d__x000a_    /* Отметка об оригинале */_x000d__x000a_    , [StudentPetition_HasOriginals] = (case when t1.[HasOriginals] = 01/*true*/ then N'да' else N'' end)_x000d__x000a_    _x000d__x000a_    /* Преимущественное право */_x000d__x000a_    , [CompetitionType_IsAdvantageRight] = (case when t4.[IsAdvantageRight] = 01/*true*/ then N'да' else N'' end)_x000d__x000a_    _x000d__x000a_    /* Льготы */_x000d__x000a_    , [BenefitDocuments] = (_x000d__x000a_        _x000d__x000a_        /* Отрезаем первую запятую с пробелом */_x000d__x000a_        stuff(_x000d__x000a_         (select N', ' + s1.[Title]_x000d__x000a_          from [dbo].[BenefitDocumentsView] s1_x000d__x000a_          where (s1.[Student_Id] = t1.[Student_Id])_x000d__x000a__x000d__x000a_          /*Конкатенация строк через XML*/_x000d__x000a_          for xml path(''), type).value('text()[1]', 'nvarchar(max)'), 1, 2, N'')_x000d__x000a_    )_x000d__x000a__x000d__x000a_    /* Контактный телефон */_x000d__x000a_    , [Телефон] = t10.[Phone]_x000d__x000a__x000d__x000a_    /* md5(PassportSeries + PassportNumber) */_x000d__x000a_    , [PKUID] = convert(varchar(32), HashBytes('MD5', convert(varchar, (coalesce(t10.[PassportSeries], N'') + t10.[PassportNumber]))), 2)_x000d__x000a_    _x000d__x000a_  from _x000d__x000a_    _x000d__x000a_    [dbo].[StudentPetitions] t1_x000d__x000a_    _x000d__x000a_    /*_x000d__x000a_      Выборка заявлений абитуриентов (с фильтром по дате подачи заявления)_x000d__x000a_      с информацией о зачислении и результатах вступительных испытаний_x000d__x000a_    */_x000d__x000a_    join [dbo].[select_student_petitions_ext](@dt, @is_confirm_only, @academic_year_id) t2_x000d__x000a_      on(_x000d__x000a_        (t2.[id] = t1.[Id])_x000d__x000a_      )_x000d__x000a__x000d__x000a_    join [dbo].[Students] t3_x000d__x000a_      on(_x000d__x000a_        (t3.[Id] = t1.[Student_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[CompetitionTypes] t4_x000d__x000a_      on(_x000d__x000a_        (t4.[Id] = t1.[CompetitionType_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[EnterPlans] t5_x000d__x000a_      on(_x000d__x000a_        (t5.[Id] = t1.[EnterPlan_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[SpecialityQualifications] ts_x000d__x000a_      on(_x000d__x000a_        (t5.[SpecialityQualification_Id] = ts.[Id])_x000d__x000a_       )_x000d__x000a_       _x000d__x000a_    join [dbo].[Qualifications] tq _x000d__x000a_      on(_x000d__x000a_        (ts.[Qualification_Id] = tq.[Id])_x000d__x000a_       )      _x000d__x000a_      _x000d__x000a_    left join (_x000d__x000a_      _x000d__x000a_      /* Выборка факультета плана приема для использования в фильтре по факультету */_x000d__x000a_      select       _x000d__x000a_        s1.[EnterPlan_Id]        _x000d__x000a_        , [Department_Id] = max(s1.[Department_Id])_x000d__x000a_        _x000d__x000a_      from [dbo].[EnterPlanDepartments] s1_x000d__x000a_      where (s1.[Department_Id] = @department_id)_x000d__x000a_      group by s1.[EnterPlan_Id]_x000d__x000a_      _x000d__x000a_    ) t6 on(_x000d__x000a_          t5.[Id] = t6.[EnterPlan_Id]_x000d__x000a_        )_x000d__x000a_        _x000d__x000a_    left join [dbo].[BenefitDocumentsView] t7_x000d__x000a_      on(_x000d__x000a_        (t7.[Id] = t1.[BenefitDocument_Id])_x000d__x000a_      )_x000d__x000a_    _x000d__x000a_    left join [dbo].[BenefitDocumentTypes] t8_x000d__x000a_      on(_x000d__x000a_        (t8.[Id] = t7.[BenefitDocumentType_Id])_x000d__x000a_      )        _x000d__x000a_        _x000d__x000a_    left join (_x000d__x000a_      _x000d__x000a_      /* выборка для определения наличия приказов на зачисление */_x000d__x000a_      select [EnterPlan_Id] from [dbo].[EnterOrders] where [IsConfirm] = 01/*true*/ group by [EnterPlan_Id]_x000d__x000a_      _x000d__x000a_    ) t9_x000d__x000a_      on(_x000d__x000a_        (t9.[EnterPlan_Id] = t5.[Id])_x000d__x000a_      )_x000d__x000a__x000d__x000a_    join [dbo].[EnrolleeProfilesView] t10_x000d__x000a_      on(_x000d__x000a_        (t10.[Student_Id] = t3.[Id])_x000d__x000a_      )_x000d__x000a__x000d__x000a_  where(_x000d__x000a_  _x000d__x000a_    /* СПО, ВПО, ДПО */_x000d__x000a_    (tq.[IsSpo] = 1 or tq.[IsVpo] = 1 or tq.[IsCourses] = 1) and_x000d__x000a__x000d__x000a_    /* Отметка о зачислении */_x000d__x000a_    (00/*false*/ = t2.[is_enter]) and_x000d__x000a_    _x000d__x000a_    /* Выбыл из конкурса */_x000d__x000a_    (00/*false*/ = t2.[is_drop_out]) and_x000d__x000a_    _x000d__x000a_    /* Дата возврата заявления (если не указано, то попадает в выборку) */_x000d__x000a_    ([dbo].[start_date](@dt) &lt; [dbo].[due_date](coalesce(t1.[DateOfReturn], @dt))) and_x000d__x000a_    _x000d__x000a_    /* Без ВИ */_x000d__x000a_    (@is_without_exams = t4.[IsWithoutExam]) and_x000d__x000a_    _x000d__x000a_    /* Успешное прохождение всех вступительных испытаний _x000d__x000a_    (@is_over_min_rating = t2.[is_over_min_rating]) and */_x000d__x000a_    _x000d__x000a_    /* Если установлен фильтр по Факультету / институту, то используем его */_x000d__x000a_    (@department_id = 0 or t6.[Department_Id] = @department_id)_x000d__x000a_    _x000d__x000a_  )_x000d__x000a_  _x000d__x000a_  order by_x000d__x000a_  _x000d__x000a_    /* Идентификатор плана приема */_x000d__x000a_    t1.[EnterPlan_Id]_x000d__x000a_    _x000d__x000a_    /* Ранжирование абитуриентов с льготой &quot;Без вступительных испытаний&quot; _x000d__x000a_       (TODO: учитывать льготу &quot;Преимущественное право&quot; при равных баллах) _x000d__x000a_     */_x000d__x000a_    , (case _x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'11'/*Члены сборных команд*/ then 1_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'04'/*Диплом ВОШ*/ and t7.[IsWinner] = 01/*победитель*/ then 2_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'04'/*Диплом ВОШ*/ and t7.[IsWinner] = 00/*призер*/ then 3_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'12'/*Чемпионы и призеры в спорте*/ then 4_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'06'/*Диплом ОШ*/ and t7.[IsWinner] = 01/*победитель*/ then 5_x000d__x000a_         when t4.[IsWithoutExam] = 01 and t8.[Code] = N'06'/*Диплом ОШ*/ and t7.[IsWinner] = 00/*призер*/ then 6_x000d__x000a_         else 99999/*низший приоритет*/_x000d__x000a_       end)_x000d__x000a_    _x000d__x000a_    /* Сумма балов в порядке убывания */_x000d__x000a_    , t2.[total_rating] desc_x000d__x000a_    _x000d__x000a_    /* Балл по профильному экзамену */_x000d__x000a_    , t2.[specific_exam_result_rating] desc_x000d__x000a__x000d__x000a_    /* Баллы за индивидуальные достижения */_x000d__x000a_    , t2.[achievements_rating] desc_x000d__x000a__x000d__x000a_    /* Преимущественное право при зачислении в порядке убывания */_x000d__x000a_    , (case when t4.[IsAdvantageRight] = 01/*true*/ or t4.[IsOutOfCompetition] = 01/*true*/ then 1 else 0 end) desc_x000d__x000a_    _x000d__x000a_    /* Наименование заявления абитуриента */_x000d__x000a_    , t1.[Title]_x000d__x000a_  ;_x000d__x000a_"/></connection><connection id="5" keepAlive="1" name="Query #8" description="Общий_рейтинговый_список_Query_8.sql" type="5" refreshedVersion="5" savePassword="1" saveData="1"><dbPr connection="Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=mssql-edu.on.mgpu.ru;Extended Properties=&quot;Trusted_connection=yes&quot;;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Workstation ID=AW0216K01;Use Encryption for Data=False;Tag with column collation when possible=False" command="_x000d__x000a_  /*_x000d__x000a_   *_x000d__x000a_   * ConnectionString = Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=edu_SQL_Storage;Data Source=192.168.18.201\sql;Use Procedure for Prepare=1;Auto Translate=True;Packet Size=4096;Use Encryption for Data=False;Tag with column collation when possible=False;User ID=sa;Password=ibzIq62bI1060S_x000d__x000a_   *_x000d__x000a_   */_x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Дата формирования отчета_x000d__x000a_   */_x000d__x000a_  declare @dt datetime; select @dt = dbo.create_date(2015,7,28);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Учебный год_x000d__x000a_   */_x000d__x000a_  declare @academic_year_id integer; select @academic_year_id = coalesce([dbo].[get_academic_year_id](@dt, 01/*true*/), -1/*id*/);_x000d__x000a_  _x000d__x000a_  /*_x000d__x000a_   * Выборка всех Факультетов в алфавитном порядке для заданного учебного года,_x000d__x000a_   * используемых в плане приема_x000d__x000a_   */_x000d__x000a_  select_x000d__x000a_  _x000d__x000a_    t1.[Id]_x000d__x000a_    _x000d__x000a_    , t1.[Title]_x000d__x000a_    _x000d__x000a_  from _x000d__x000a_  _x000d__x000a_    [dbo].[Departments] t1_x000d__x000a_    _x000d__x000a_    join [dbo].[EnterPlanDepartments] t2_x000d__x000a_      on(_x000d__x000a_        (t1.[Id] = t2.[Department_Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[EnterPlans] t3_x000d__x000a_        on(_x000d__x000a_        (t2.[EnterPlan_Id] = t3.[Id])_x000d__x000a_      )_x000d__x000a_      _x000d__x000a_    join [dbo].[SpecialityQualifications] ts_x000d__x000a_      on(_x000d__x000a_        (t3.[SpecialityQualification_Id] = ts.[Id])_x000d__x000a_       )_x000d__x000a_       _x000d__x000a_    join [dbo].[Qualifications] tq _x000d__x000a_      on(_x000d__x000a_        (ts.[Qualification_Id] = tq.[Id])_x000d__x000a_       )      _x000d__x000a_      _x000d__x000a_  where _x000d__x000a_  _x000d__x000a_    t3.[AcademicYear_Id] = @academic_year_id_x000d__x000a_    _x000d__x000a_    /* СПО, ВПО, ДПО */_x000d__x000a_    and (tq.[IsSpo] = 1 or tq.[IsVpo] = 1 or tq.[IsCourses] = 1)_x000d__x000a_    _x000d__x000a_  group by t1.[Id], t1.[Title]_x000d__x000a_                  _x000d__x000a_  order by t1.[Title]_x000d__x000a_  _x000d__x000a_  ;_x000d__x000a_"/></connection></connections>